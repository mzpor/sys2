# سناریوی دقیق ربات مدیریت تلاوت قرآن

این سند یک سناریوی دقیق و جامع برای عملکرد ربات مدیریت تلاوت قرآن
 ارائه می‌دهد که بر اساس کد پایتون ارائه‌شده طراحی شده است. این ربات برای 
مدیریت گروه‌های آموزشی قرآنی طراحی شده 



و قابلیت‌های:
نمایش لیست اعضای روم  بعد اجازه اعضا
تشخیص  ارسال تمرین  با کپشن تمرین
در محدوده روز تمرین 
دادن گزینه به استاد برای ارزیابی 
بعد ارزیابی استاد لیست نمرات نفرات دیده میشه 
دکمه نظر سنجی از نمره استاد توسط کاربر 
لیست نمرات در گروه 
لیست نظرات در خصوصی ادمین نمایش داده میشه 
در خصوصی مربی لیست قران اموز دارای گزینه 
حاضر
تاخیر
غایب 
موجه
مربی برای هر قران اموز در خصوصی خود لیست میبیند.





و ارزیابی تلاوت‌ها، نمره‌دهی، حضور و غیاب، و گزارش‌گیری را ارائه می‌دهد.
 سناریو با جزئیات مراحل مختلف، پیام‌ها، اعتبارسنجی‌ها، و مدیریت خطاها را شرح می‌دهد.

---

## پیکربندی اولیه

### تنظیمات و توکن‌ها
- **توکن ربات**:
  BOT_TOKEN = '811316021:qhTkuourrvpM4nF1xrE6MyD93rSgJBfVZFwXbJU1'
  BASE_URL = f"https://tapi.bale.ai/bot{BOT_TOKEN}"
  ```
- **فایل داده**:
  - اطلاعات در فایل `1.json` ذخیره می‌شود.
  - داده‌ها شامل:
    - `known_members`: اطلاعات اعضای گروه
    - `recitation_exercises`: تمرین‌های تلاوت
    - `exercise_scores`: نمرات تمرین‌ها
    - `attendance`: وضعیت حضور و غیاب
    -نظر سنجس نمره مربی 

کانفیگ اول برنامه 
روز تمرین 
روز ارزیابی 
روز حضور و غیابپ
تلفن مدیر
تلفن مربی1
تلفن مربی2
....

- **روزهای برنامه**:
  - **ارسال تلاوت**: شنبه و دوشنبه
  - **نمره‌دهی**: یکشنبه و سه‌شنبه
  - **حضور و غیاب**: پنج‌شنبه
  - **استراحت**: چهارشنبه و جمعه
  نظر سنجی قران اموز به نمره مربی ؟؟
  از1 2 3 4 5 نمره داده میشود. 

### ذخیره‌سازی و بارگذاری داده‌ها
- **ذخیره‌سازی**:
  - داده‌ها در `1.json` ذخیره می‌شوند.
  - در صورت خطا در ذخیره‌سازی، خطا در کنسول ثبت می‌شود (`logging.error`).
- **بارگذاری**:
  - داده‌ها در ابتدای اجرای ربات از `1.json` بارگذاری می‌شوند.
  - اگر فایل وجود نداشته باشد، داده‌ها به‌صورت خالی مقداردهی اولیه می‌شوند.
  - در صورت خرابی فایل، خطا ثبت شده و برنامه ادامه می‌یابد.
  اعلام اینکه امار از چه روزی در حال ثبت هست مهمه
  به طور سالم از تاریخ فلان امار  حضور و غیاب  ارزیبای نظر سنجی  ثبت شده
   و به  شماره مشخص شده در خصوصی گزارش دهد. 

### لاگ‌گیری
- لاگ‌ها با فرمت `%asctime%s - %levelname%s - %message%s` در کنسول نمایش داده می‌شوند.
- لاگ‌ها ذخیره نمی‌شوند و فقط برای دیباگ در کنسول هستند.

--- ---------------

## سناریوی کاربری

### ۱. ورود عضو جدید به گروه
- **شرایط**:
  - کاربر جدید به گروه می‌پیوندد (`new_chat_members` در پیام دریافتی).
  - کاربر ادمین نباشد.
- **اقدام ربات**:
  - کاربر به لیست `known_members` اضافه می‌شود:
    ```python
    known_members[chat_id][user_id] = {
        'name': get_simple_name(user_info),
        'id': user_id,
        'added_time': time.time()
    }
    ```
  - پیام خوش‌آمدگویی:
    ```
    🎉 [نام کاربر]، به گروه خوش آمدید!
    لطفاً برای ثبت در لیست، /عضو شوید.
    ```
    در روز تمرین لیست  افراد با اعلام 
    ارسال تمرین 
    منتظر ارسال
     منتشر میشود

     در روز ارزیابی  لیست با اعلام
     منتظر نمره
     نمره ثبت شده
     منتشر میشود 

  - لیست به‌روز شده اعضا ارسال می‌شود:
    ```
    📋 لیست اعضا
    📅 [روز هفته] [تاریخ جلالی]
   
    👥 قرآن‌آموزان:
    1. [نام کاربر ۱endfunction
    2. [نام کاربر ۲]

    📊 آمار:
    👑 ادمین‌ها: [تعداد]
    👥 قرآن‌آموزان: [تعداد]
    ```

### ۲. ثبت‌نام کاربر با دستور `/عضو`
- **شرایط**:
  - کاربر غیرادمین دستور `/عضو` را در گروه وارد می‌کند.
- **اقدام ربات**:
  - اگر کاربر قبلاً در `known_members` ثبت نشده باشد، اضافه می‌شود.
    - پیام تأیید:
    ```
  برای نشان دادن ثبت کاربر .  یک  لیست به‌روز شده اعضا ارسال می‌شود (مشابه بالا).
   و در ابتدای ضفحه به کاربر جدید خوش امد گویی میکند. 

- **اعتبارسنجی**:
  - اگر کاربر ادمین باشد، این دستور نادیده گرفته نمی‌شود.
  به ادمین سلام میکند. برای نشان دادن واکنش 

### ۳. دستور `/شروع` (فقط ادمین)
- **شرایط**:
  - کاربر ادمین دستور `/شروع` را وارد می‌کند.
- **اقدام ربات**:
  - ارسال پیام راهنما:
    ```
    🤖 ربات تلاوت

    دستورات:
    👥 /عضو - ثبت در گروه
    📋 /لیست   روز- لیست اعضا

    -لیست روز اگر روز تمرین باشد در حال نمایش لیست اعضا همراه  اعلام تمرین ارسال شده و انتظار تمرین 
    اگر لیست در روز ارزیابی باشد نمایش لیست همراه با ارزیابی مربی و کمک مربی 
    تعدادی  توسط مربی و تعدادی توسط کمک مربی پاسخ داده میشه 
    ربات مربی و کمک مربی را تشخیص میدهد
    و در لیست ارزیابی به تفکیک ارزیابی مربی و ارزیابی کمک مربی و در انتظار ارزیابی دسته بندی میکند. 



    📅 برنامه:
    - شنبه و دوشنبه: ارسال تلاوت (تا ۲۳:۵۹)
    - یکشنبه و سه‌شنبه: نمره‌دهی
    - چهارشنبه: استراحت
    - پنج‌شنبه: کلاس آنلاین (حضور و غیاب)

    📅 امروز: [روز هفته] [تاریخ جلالی]
    ```

### ۴. ارسال تمرین تلاوت
- **شرایط**:
  - روز ارسال تلاوت (شنبه یا دوشنبه).
  از 6 صبح روز تمرین تا ساعت 23 
  - پیام شامل فایل صوتی (`voice` یا `audio`) باشد.
  - کپشن شامل کلمات کلیدی`تمرین` باشد 
  (حساس به حروف بزرگ و کوچک نمیباشد چون فارسی است ).
  - کاربر غیرادمین باشد.

- **اقدام ربات**:
  - ثبت تمرین در `recitation_exercises`:
    ```python
    recitation_exercises[chat_id][user_id] = {
        'status': 'sent',
        'score': None,
        'date': get_jalali_date(),
        'message_id': message['message_id'],
        'user_name': user_name,
        'exercise_day': get_week_day()
    }
    ```
  - پیام تأیید:
    ```
    ✅ تلاوت [نام کاربر] دریافت شد!
    ```
  - برنامه‌ریزی برای ارسال گزارش خودکار در پایان مهلت (ساعت ۲۳:۵۹ همان روز).
- **اعتبارسنجی**:
  - اگر روز ارسال تلاوت نباشد:
    ```
    ⚠️ امروز روز ارسال تلاوت نیست! روزهای ارسال: شنبه و دوشنبه
    ```
  - اگر کاربر ادمین باشد، پیام نادیده گرفته می‌شود.
  - اگر پیام فاقد فایل صوتی یا کلمات کلیدی باشد، نادیده گرفته می‌شود.

### ۵. نمره‌دهی توسط مربی و کمک مربی 
- **شرایط**:
  - روز نمره‌دهی (یکشنبه یا سه‌شنبه).
  - به محض فرستادن تمرین صوتی با کپشن تمرین 
  ربات 5 دکمه شیشه ای ایجاد میکند برای مربی و کمک مربی که نمره دهند
  به محض اینکه مربی  یا کمک مربی روی دکمه های شیشه ای میزنند 
  پیام نمره داده شد و نشان دادن لیست روز  داده میشود. 
  در این لیست به تفکیک مربی و کمک مربی و در انتظار مربی لیست قران اموز ها  که ارزیابی شده اند و در انتظار هستند دیده میشوند.

  -گزینه های کیبرد های شیشه ای 
     `نیاز به تلاش بیشتر`،
      `متوسط`،
       `خوب`، 
       `عالی` 
       `ممتاز` 
        را وارد کند.
         حتما ربات دقت کند اگر نمره داده شد کیبرد  شیشه ای پنهان یا حذف شود. 
          تا فقط یکی از مرب و کمک مربی   نمره داده باشد. 

- **اقدام ربات**:
  - ثبت نمره در `recitation_exercises` و `exercise_scores`:
    ```python
    recitation_exercises[chat_id][replied_user_id]['score'] = score
    exercise_scores[chat_id][replied_user_id].append({
        'score': score,
        'date': get_jalali_date(),
        'week_day': recitation_exercises[chat_id][replied_user_id]['exercise_day']
    })
    ```
  - پیام تأیید: بالای لیست روز در یک خط بیاید عالی است. 


---

## دستورالعمل‌های طراحی

### پیام‌ها
- **فرمت**:
  - کوتاه، محترمانه، با استفاده از نام کاربر.
  - استفاده از ایموجی‌ها: 🌟، ✅، ❌، 📋، 🎯، 🏆، 📚.
- **مثال پیام**:
  ```
  🎉 [نام کاربر]، ثبت شدید!
  📋 لیست اعضا
  📅 [روز هفته] [تاریخ جلالی]
  ```

### کیبوردها
- ربات از کیبوردهای شیشه‌ای یا معمولی استفاده نمی‌کند (فقط پیام‌های متنی و دستورات).
- پاسخ‌ها به‌صورت متنی و با دستورات (`/عضو`، `/لیست`، ) مدیریت می‌شوند.

### مدیریت خطاها
- **پیام‌های خطا**:
  - محترمانه و راهنما:
    ```
    ⚠️ امروز روز ارسال تلاوت نیست! روزهای ارسال: شنبه و دوشنبه
    ```
- **ذخیره‌سازی**:
  - در صورت خطا در ذخیره یا بارگذاری `bot_data.json`، خطا در کنسول ثبت شده و برنامه ادامه می‌یابد.
- **شبکه**:
  - در صورت خطای شبکه، ربات ۱۰ ثانیه منتظر می‌ماند و دوباره تلاش می‌کند.

### گزارش‌ها
- گزارش‌ها با `logging` در کنسول ثبت می‌شوند (بدون ذخیره در فایل).
- مثال:
  ```python
  logging.info("ربات تلاوت شروع شد...")
  logging.error("خطا در ذخیره داده‌ها: [جزئیات]")
  ```

---

## نکات نهایی
- **کاربرپسند بودن**:
  - ربات با پیام‌های ساده و واضح طراحی شده است.
  - استفاده از ایموجی‌ها و تاریخ جلالی تجربه کاربری را بهبود می‌بخشد.
- **برنامه زمانی**:
  - روزهای مشخص برای تلاوت، نمره‌دهی، و حضور و غیاب، فرآیند را منظم می‌کند.
- **مدیریت خودکار**:
  - گزارش‌های خودکار در پایان روزهای تلاوت (ساعت ۲۳:۵۹) ارسال می‌شوند.
- **محدودیت‌ها**:
  - ربات فقط در گروه‌ها کار می‌کند.
  - کیبوردهای تعاملی (شیشه‌ای یا معمولی) استفاده نشده‌اند.
- **بهبودهای پیشنهادی**:
  - افزودن کیبوردهای شیشه‌ای برای انتخاب گزینه‌ها (مثل تأیید تلاوت یا حضور).
  - افزودن قابلیت ثبت‌نام خصوصی و پرداخت (مشابه کد قبلی).
  - پشتیبانی از بکاپ فایل داده در صورت خرابی.

این سناریو به‌طور کامل عملکرد ربات را بر اساس کد ارائه‌شده پوشش می‌دهد و تجربه کاربری منظم و کارآمدی را فراهم می‌کند.




؟؟؟؟؟؟؟؟؟؟؟؟؟؟؟