# سناریوی دقیق ربات مدیریت تلاوت قرآن

این سند یک سناریوی دقیق و جامع برای عملکرد ربات مدیریت تلاوت قرآن ارائه می‌دهد که بر اساس کد پایتون ارائه‌شده طراحی شده است. این ربات برای مدیریت گروه‌های آموزشی قرآنی طراحی شده و قابلیت‌های ثبت‌نام اعضا، ارسال و ارزیابی تلاوت‌ها، نمره‌دهی، حضور و غیاب، و گزارش‌گیری را ارائه می‌دهد. سناریو با جزئیات مراحل مختلف، پیام‌ها، اعتبارسنجی‌ها، و مدیریت خطاها را شرح می‌دهد.

---

## پیکربندی اولیه

### تنظیمات و توکن‌ها
- **توکن ربات**:
  ```python
  BOT_TOKEN = '811316021:qhTkuourrvpM4nF1xrE6MyD93rSgJBfVZFwXbJU1'
  BASE_URL = f"https://tapi.bale.ai/bot{BOT_TOKEN}"
  ```
- **فایل داده**:
  - اطلاعات در فایل `bot_data.json` ذخیره می‌شود.
  - داده‌ها شامل:
    - `known_members`: اطلاعات اعضای گروه
    - `recitation_exercises`: تمرین‌های تلاوت
    - `exercise_scores`: نمرات تمرین‌ها
    - `attendance`: وضعیت حضور و غیاب
- **پیام‌های انگیزشی**:
  ```python
  motivational_quotes = [
      "🌟 تلاوتت، نور قلبت رو بیشتر می‌کنه!",
      "🚀 هر تلاوت، یه قدم به سوی کماله!",
      "💪 با تمرین مداوم، ستاره گروه باش!"
  ]
  ```
- **روزهای برنامه**:
  - **ارسال تلاوت**: شنبه و دوشنبه
  - **نمره‌دهی**: یکشنبه و سه‌شنبه
  - **حضور و غیاب**: پنج‌شنبه
  - **استراحت**: چهارشنبه و جمعه

### ذخیره‌سازی و بارگذاری داده‌ها
- **ذخیره‌سازی**:
  - داده‌ها در `bot_data.json` ذخیره می‌شوند.
  - در صورت خطا در ذخیره‌سازی، خطا در کنسول ثبت می‌شود (`logging.error`).
- **بارگذاری**:
  - داده‌ها در ابتدای اجرای ربات از `bot_data.json` بارگذاری می‌شوند.
  - اگر فایل وجود نداشته باشد، داده‌ها به‌صورت خالی مقداردهی اولیه می‌شوند.
  - در صورت خرابی فایل، خطا ثبت شده و برنامه ادامه می‌یابد.

### لاگ‌گیری
- لاگ‌ها با فرمت `%asctime%s - %levelname%s - %message%s` در کنسول نمایش داده می‌شوند.
- لاگ‌ها ذخیره نمی‌شوند و فقط برای دیباگ در کنسول هستند.

---

## سناریوی کاربری

### ۱. ورود عضو جدید به گروه
- **شرایط**:
  - کاربر جدید به گروه می‌پیوندد (`new_chat_members` در پیام دریافتی).
  - کاربر ادمین نباشد.
- **اقدام ربات**:
  - کاربر به لیست `known_members` اضافه می‌شود:
    ```python
    known_members[chat_id][user_id] = {
        'name': get_simple_name(user_info),
        'id': user_id,
        'added_time': time.time()
    }
    ```
  - پیام خوش‌آمدگویی:
    ```
    🎉 [نام کاربر]، به گروه خوش آمدید!
    لطفاً برای ثبت در لیست، /عضو بزنید.
    ```
  - لیست به‌روز شده اعضا ارسال می‌شود:
    ```
    📋 لیست اعضا
    📅 [روز هفته] [تاریخ جلالی]

    👑 ادمین‌ها:
    • [نام ادمین ۱]
    • [نام ادمین ۲]

    👥 قرآن‌آموزان:
    1. [نام کاربر ۱endfunction
    2. [نام کاربر ۲]

    📊 آمار:
    👑 ادمین‌ها: [تعداد]
    👥 قرآن‌آموزان: [تعداد]
    ```

### ۲. ثبت‌نام کاربر با دستور `/عضو`
- **شرایط**:
  - کاربر غیرادمین دستور `/عضو` را در گروه وارد می‌کند.
- **اقدام ربات**:
  - اگر کاربر قبلاً در `known_members` ثبت نشده باشد، اضافه می‌شود.
  - پیام تأیید:
    ```
    🎉 [نام کاربر]، ثبت شدید!
    ```
  - لیست به‌روز شده اعضا ارسال می‌شود (مشابه بالا).
- **اعتبارسنجی**:
  - اگر کاربر ادمین باشد، این دستور نادیده گرفته می‌شود.

### ۳. دستور `/شروع` (فقط ادمین)
- **شرایط**:
  - کاربر ادمین دستور `/شروع` را وارد می‌کند.
- **اقدام ربات**:
  - ارسال پیام راهنما:
    ```
    🤖 ربات تلاوت

    دستورات:
    👥 /عضو - ثبت در گروه
    📋 /لیست - لیست اعضا
    🎯 /گزارش - گزارش تلاوت‌ها
    🏆 /نمرات - گزارش نمرات
    📚 /حضور - ثبت حضور و غیاب

    📅 برنامه:
    - شنبه و دوشنبه: ارسال تلاوت (تا ۲۳:۵۹)
    - یکشنبه و سه‌شنبه: نمره‌دهی
    - چهارشنبه: استراحت
    - پنج‌شنبه: کلاس آنلاین (حضور و غیاب)

    📅 امروز: [روز هفته] [تاریخ جلالی]
    ```

### ۴. ارسال تمرین تلاوت
- **شرایط**:
  - روز ارسال تلاوت (شنبه یا دوشنبه).
  - پیام شامل فایل صوتی (`voice` یا `audio`) باشد.
  - کپشن شامل کلمات کلیدی `تلاوت`، `تمرین` یا `ارسال تلاوت` باشد (حساس به حروف بزرگ و کوچک).
  - کاربر غیرادمین باشد.
- **اقدام ربات**:
  - ثبت تمرین در `recitation_exercises`:
    ```python
    recitation_exercises[chat_id][user_id] = {
        'status': 'sent',
        'score': None,
        'date': get_jalali_date(),
        'message_id': message['message_id'],
        'user_name': user_name,
        'exercise_day': get_week_day()
    }
    ```
  - پیام تأیید:
    ```
    ✅ تلاوت [نام کاربر] دریافت شد!
    ```
  - برنامه‌ریزی برای ارسال گزارش خودکار در پایان مهلت (ساعت ۲۳:۵۹ همان روز).
- **اعتبارسنجی**:
  - اگر روز ارسال تلاوت نباشد:
    ```
    ⚠️ امروز روز ارسال تلاوت نیست! روزهای ارسال: شنبه و دوشنبه
    ```
  - اگر کاربر ادمین باشد، پیام نادیده گرفته می‌شود.
  - اگر پیام فاقد فایل صوتی یا کلمات کلیدی باشد، نادیده گرفته می‌شود.

### ۵. نمره‌دهی توسط ادمین
- **شرایط**:
  - روز نمره‌دهی (یکشنبه یا سه‌شنبه).
  - ادمین به پیام تلاوت کاربر پاسخ (`reply_to_message`) داده و یکی از نمرات `نیاز به تلاش بیشتر`، `متوسط`، `خوب`، `عالی` یا `ممتاز` را وارد کند.
  - تلاوت قبلاً نمره‌دهی نشده باشد.
- **اقدام ربات**:
  - ثبت نمره در `recitation_exercises` و `exercise_scores`:
    ```python
    recitation_exercises[chat_id][replied_user_id]['score'] = score
    exercise_scores[chat_id][replied_user_id].append({
        'score': score,
        'date': get_jalali_date(),
        'week_day': recitation_exercises[chat_id][replied_user_id]['exercise_day']
    })
    ```
  - پیام تأیید:
    ```
    🎯 نمره جدید: [نام کاربر] - [نمره]
    📅 [تاریخ جلالی]
    ```
- **اعتبارسنجی**:
  - اگر کاربر ادمین نباشد، پیام نادیده گرفته می‌شود.
  - اگر پیام پاسخ به تلاوت نباشد یا تلاوت قبلاً نمره‌دهی شده باشد، نادیده گرفته می‌شود.
  - اگر نمره نامعتبر باشد:
    ```
    ⚠️ لطفاً یکی از نمرات معتبر (نیاز به تلاش بیشتر، متوسط، خوب، عالی، ممتاز) را وارد کنید.
    ```

### ۶. ثبت حضور و غیاب (فقط ادمین)
- **شرایط**:
  - روز حضور و غیاب (پنج‌شنبه).
  - ادمین به پیام کاربر پاسخ داده و `حاضر` یا `غایب` را وارد کند.
- **اقدام ربات**:
  - ثبت وضعیت در `attendance`:
    ```python
    attendance[chat_id][replied_user_id] = {
        'date': get_jalali_date(),
        'present': text == 'حاضر'
    }
    ```
  - پیام تأیید:
    ```
    📋 حضور و غیاب: [نام کاربر] - [حاضر/غایب]
    📅 [تاریخ جلالی]
    ```
- **اعتبارسنجی**:
  - اگر روز پنج‌شنبه نباشد:
    ```
    ⚠️ امروز (پنج‌شنبه) روز حضور و غیاب است!
    ```
  - اگر کاربر ادمین نباشد:
    ```
    ⚠️ فقط ادمین‌ها می‌توانند حضور و غیاب ثبت کنند!
    ```
  - اگر متن `حاضر` یا `غایب` نباشد:
    ```
    ⚠️ لطفاً فقط 'حاضر' یا 'غایب' بنویسید.
    ```

### ۷. گزارش تلاوت‌ها (دستور `/گزارش`)
- **شرایط**:
  - فقط ادمین می‌تواند دستور `/گزارش` را اجرا کند.
- **اقدام ربات**:
  - تولید گزارش:
    ```
    📋 گزارش تلاوت
    📅 [روز هفته] [تاریخ جلالی]

    [وضعیت روز: 🟢 روز ارسال تلاوت / 🔵 روز نمره‌دهی / 📚 روز کلاس آنلاین / 🔴 روز استراحت]

    📤 تلاوت‌های ارسالی:
    ✅ [نام کاربر ۱]
    ✅ [نام کاربر ۲]

    ⏳ در انتظار تلاوت:
    ❌ [نام کاربر ۳]
    ❌ [نام کاربر ۴]

    📊 آمار:
    👥 کل اعضا: [تعداد]
    📤 تلاوت ارسالی: [تعداد]
    📈 درصد مشارکت: [درصد]%
    ```
  - اگر گزارش خودکار باشد (در پایان مهلت)، پیام انگیزشی اضافه می‌شود:
    ```
    💡 پیام انگیزشی:
    [یکی از پیام‌های انگیزشی]
    ```

### ۸. گزارش نمرات (دستور `/نمرات`)
- **شرایط**:
  - فقط ادمین می‌تواند دستور `/نمرات` را اجرا کند.
- **اقدام ربات**:
  - تولید گزارش:
    ```
    🏆 گزارش نمرات
    📅 [روز هفته] [تاریخ جلالی]

    🌟 ممتاز:
    1. [نام کاربر]

    ⭐ عالی:
    1. [نام کاربر]

    👍 خوب:
    1. [نام کاربر]

    📖 متوسط:
    1. [نام کاربر]

    💪 نیاز به تلاش بیشتر:
    1. [نام کاربر]

    ❌ بدون تلاوت:
    1. [نام کاربر]
    ```

### ۹. نمایش لیست اعضا (دستور `/لیست`)
- **شرایط**:
  - هر کاربری می‌تواند دستور `/لیست` را اجرا کند.
- **اقدام ربات**:
  - ارسال لیست:
    ```
    📋 لیست اعضا
    📅 [روز هفته] [تاریخ جلالی]

    👑 ادمین‌ها:
    • [نام ادمین ۱]
    • [نام ادمین ۲]

    👥 قرآن‌آموزان:
    1. [نام کاربر ۱]
    2. [نام کاربر ۲]

    📊 آمار:
    👑 ادمین‌ها: [تعداد]
    👥 قرآن‌آموزان: [تعداد]
    ```

---

## دستورالعمل‌های طراحی

### پیام‌ها
- **فرمت**:
  - کوتاه، محترمانه، با استفاده از نام کاربر.
  - استفاده از ایموجی‌ها: 🌟، ✅، ❌، 📋، 🎯، 🏆، 📚.
- **مثال پیام**:
  ```
  🎉 [نام کاربر]، ثبت شدید!
  📋 لیست اعضا
  📅 [روز هفته] [تاریخ جلالی]
  ```

### کیبوردها
- ربات از کیبوردهای شیشه‌ای یا معمولی استفاده نمی‌کند (فقط پیام‌های متنی و دستورات).
- پاسخ‌ها به‌صورت متنی و با دستورات (`/عضو`، `/لیست`، `/گزارش`، `/نمرات`، `/حضور`) مدیریت می‌شوند.

### مدیریت خطاها
- **پیام‌های خطا**:
  - محترمانه و راهنما:
    ```
    ⚠️ امروز روز ارسال تلاوت نیست! روزهای ارسال: شنبه و دوشنبه
    ```
- **ذخیره‌سازی**:
  - در صورت خطا در ذخیره یا بارگذاری `bot_data.json`، خطا در کنسول ثبت شده و برنامه ادامه می‌یابد.
- **شبکه**:
  - در صورت خطای شبکه، ربات ۱۰ ثانیه منتظر می‌ماند و دوباره تلاش می‌کند.

### گزارش‌ها
- گزارش‌ها با `logging` در کنسول ثبت می‌شوند (بدون ذخیره در فایل).
- مثال:
  ```python
  logging.info("ربات تلاوت شروع شد...")
  logging.error("خطا در ذخیره داده‌ها: [جزئیات]")
  ```

---

## نکات نهایی
- **کاربرپسند بودن**:
  - ربات با پیام‌های ساده و واضح طراحی شده است.
  - استفاده از ایموجی‌ها و تاریخ جلالی تجربه کاربری را بهبود می‌بخشد.
- **برنامه زمانی**:
  - روزهای مشخص برای تلاوت، نمره‌دهی، و حضور و غیاب، فرآیند را منظم می‌کند.
- **مدیریت خودکار**:
  - گزارش‌های خودکار در پایان روزهای تلاوت (ساعت ۲۳:۵۹) ارسال می‌شوند.
- **محدودیت‌ها**:
  - ربات فقط در گروه‌ها کار می‌کند.
  - کیبوردهای تعاملی (شیشه‌ای یا معمولی) استفاده نشده‌اند.
- **بهبودهای پیشنهادی**:
  - افزودن کیبوردهای شیشه‌ای برای انتخاب گزینه‌ها (مثل تأیید تلاوت یا حضور).
  - افزودن قابلیت ثبت‌نام خصوصی و پرداخت (مشابه کد قبلی).
  - پشتیبانی از بکاپ فایل داده در صورت خرابی.

این سناریو به‌طور کامل عملکرد ربات را بر اساس کد ارائه‌شده پوشش می‌دهد و تجربه کاربری منظم و کارآمدی را فراهم می‌کند.